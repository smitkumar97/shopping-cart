{"version":3,"sources":["component/navbar.jsx","component/counter.jsx","component/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","totalCounters","className","href","Counter","this","getBadgeClasses","formatCount","onClick","props","onIncrement","counter","onDecrement","disabled","value","onDelete","id","classes","Component","Counters","onReset","counters","map","App","state","handleIncrement","index","indexOf","setState","handleDecrement","handleReset","c","handleDelete","counterId","filter","console","log","Fragment","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfdf5b11.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n//stateless functional component\r\n\r\nconst Navbar = ({totalCounters}) => {\r\n    return (  \r\n <nav className=\"navbar navbar-light bg-light\">\r\n  <a className=\"navbar-brand\" href=\"https://getbootstrap.com/docs/4.1/components/navbar/\">\r\n      Navbar <span className=\"badge badge-pill badge-secondary\">{totalCounters}</span>\r\n </a>\r\n </nav>\r\n );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n\r\n    render() { \r\n        return (\r\n                <div className=\"row\">\r\n            <div className=\"col-1\">\r\n                <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n            </div>\r\n            <div className=\"col\">\r\n                <button onClick={() => { this.props.onIncrement(this.props.counter)}} className=\"btn btn-secondary btn-sm m-2\">+</button>\r\n                <button onClick={ () => this.props.onDecrement(this.props.counter)} className=\"btn btn-secondary btn-sm m-2\" \r\n                disabled={this.props.counter.value===0 ? 'disabled' : ''}\r\n                >-</button>\r\n                <button onClick={ () => this.props.onDelete(this.props.counter.id)} className=\"btn btn-danger btn-sm m-2\">X</button>\r\n            </div>\r\n            </div>\r\n            );\r\n    }\r\n    getBadgeClasses() {\r\n        let classes = \"badge m-2 badge-\";\r\n        classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\r\n        return classes;\r\n    }\r\n\r\n    formatCount() {\r\n        const { value } = this.props.counter;\r\n        return value === 0 ? \"Zero\"  : value; \r\n    }\r\n} \r\n\r\n \r\nexport default Counter;","import React, { Component } from 'react';\r\nimport Counter from \"./counter\";\r\n\r\nclass Counters extends Component {\r\n\r\n    render() { \r\n        const {onReset,onDelete,onDecrement,onIncrement,counters} =this.props;\r\n        return ( <div> \r\n            <button \r\n            onClick={onReset}\r\n            className=\"btn btn-primary btn-sm m-2\">Reset</button>\r\n            {counters.map(counter => \r\n            <Counter onDelete={onDelete}\r\n             onIncrement={onIncrement}\r\n             onDecrement ={onDecrement}\r\n            key={counter.id} \r\n            value={counter.value} \r\n            counter={counter}>\r\n            </Counter>)}\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default Counters;","import React, { Component } from 'react';\nimport Navbar from \"./component/navbar\";\nimport './App.css';\nimport Counters from \"./component/counters\"; \n\nclass App extends Component {\n      state = {  \n        counters: [\n            {id:1, value:0},\n            {id:2, value:0},\n            {id:3, value:0},\n            {id:4, value:0},\n            {id:5, value:0},\n        ]\n    }\n\n    handleIncrement = ( counter) =>{\n        const counters= [...this.state.counters];\n        const index=counters.indexOf(counter);\n        counters[index]={...counter};\n        counters[index].value++;\n        this.setState({counters});\n        // console.log(counter);\n    }\n\n    \n    handleDecrement = ( counter) =>{\n        const counters= [...this.state.counters];\n        const index=counters.indexOf(counter);\n        counters[index]={...counter};\n        if (counters[index].value ===0) {\n          return null;\n        }\n        counters[index].value--;\n        this.setState({counters});\n        // console.log(counter);\n    }\n\n    handleReset = () =>{\n       const counters= this.state.counters.map( c => { \n            c.value=0;\n            return c;\n        });\n        this.setState({counters});\n    }\n\n    handleDelete = counterId => {\n        const counters= this.state.counters.filter(c => c.id !==counterId);\n        this.setState({counters});\n        console.log(\"event called\", counterId);\n    }\n\n  render() { \n    return ( <React.Fragment>\n      <Navbar totalCounters={this.state.counters.filter(c => c.value> 0).length}/>\n      <main className=\"container\">\n      <Counters \n      counters={this.state.counters}\n      onReset={this.handleReset}\n      onDelete={this.handleDelete}\n      onIncrement={this.handleIncrement}\n      onDecrement={this.handleDecrement}\n\n      />\n      </main>\n      </React.Fragment>\n       );\n\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}